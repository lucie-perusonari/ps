#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <math.h>

using namespace std;

/*
	*문제 번호 : 24313

	*문제명 : 알고리즘 수업 - 점근적 표기 1

	*문제 설명 :
		  오늘도 서준이는 점근적 표기 수업 조교를 하고 있다. 아빠가 수업한 내용을 학생들이 잘 이해했는지 문제를 통해서 확인해보자.

		  알고리즘의 소요 시간을 나타내는 O-표기법(빅-오)을 다음과 같이 정의하자.

		  O(g(n)) = {f(n) | 모든 n ≥ n0에 대하여 f(n) ≤ c × g(n)인 양의 상수 c와 n0가 존재한다}

		  이 정의는 실제 O-표기법(https://en.wikipedia.org/wiki/Big_O_notation)과 다를 수 있다.

		  함수 f(n) = a1n + a0, 양의 정수 c, n0가 주어질 경우 O(n) 정의를 만족하는지 알아보자.

	*입력 :
		  첫째 줄에 함수 f(n)을 나타내는 정수 a1, a0가 주어진다. (0 ≤ |ai| ≤ 100)

		  다음 줄에 양의 정수 c가 주어진다. (1 ≤ c ≤ 100)

		  다음 줄에 양의 정수 n0가 주어진다. (1 ≤ n0 ≤ 100)

	*출력 :
		  f(n), c, n0가 O(n) 정의를 만족하면 1, 아니면 0을 출력한다.

*/

//* 함수의 최소 값이 0보다 큰가?
int vaildation(int a1, int a0, int c, int n0) {
	return a1 * n0 + a0 <= c * n0 && (c - a1) >= 0;
}
int main() {
	/*
		문제 해석 : O(g(n))의 정의를 f(n)이 따르는가?

			정의에 따르면 f(n)은 c*g(n) 이하여야 한다. >> 그렇다면 O(n)을 만족한다는 뜻은, f(n)이 c*n 이하여야 한다는 뜻이다.

			이 때 f(n)은 최고차항의 값이 a1이고 상수값이 a0인 1차 함수이다.

			n0 이상의 양수에 대해서 a1n + a0 <= c*n 인지 검증해야 한다.

		풀이 :

			(c - a1)n - a0 >= 0 라는 부등식을 검증하면 된다.

			위 부등식은 n에 대한 부등식이므로 (c - a1)에 따라서 부등호의 방향이 바뀐다.

			그런데 (c - a1) * n - a0 >= 0과 a1n + a0 <= c * n은 논리적으로 동일하다.

			그러므로 a1n + a0 <= c * n라는 부등식은 (c - a1)에 부등호가 바뀌는 부등식이다.
	*/

	int a1, a0, c, n0;


	cin >> a1 >> a0 >> c >> n0;

	cout << vaildation(a1, a0, c, n0);

}

